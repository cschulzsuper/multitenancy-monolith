version: '3.8'

name: "multitenancy-monolith"

networks:
  nginx:
  default:

services:

  caddy:
    container_name: ${COMPOSE_PROJECT_NAME}-caddy
    image: cschulzsuper/mm-caddy:dev
    build: 
      context: caddy
      dockerfile: Dockerfile
    ports:
      - 80:80
      - 443:443
    depends_on:
      - nginx
    networks:
      - nginx

  nginx:    
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    image: cschulzsuper/mm-nginx:dev
    build: 
      context: nginx
      dockerfile: Dockerfile
    depends_on:
      - server
      - ticker
      - portal
      - swagger
      - dev-log
    networks:
      - nginx
      - default

  server:
    container_name: ${COMPOSE_PROJECT_NAME}-server
    image: cschulzsuper/mm-server:dev
    build: 
      context: ../src
      dockerfile: server/Server/Dockerfile
    networks:
      - default
    env_file:
      - service-mappings.env
    environment:
      ASPNETCORE_HTTP_PORTS: 80
      ASPNETCORE_HTTPS_PORTS: 
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT:-Staging}
      WEBSITE_INSTANCE_ID: "11"
      HOME: "/home/app"

  ticker:
    container_name: ${COMPOSE_PROJECT_NAME}-ticker
    image: cschulzsuper/mm-ticker:dev
    build: 
      context: ../src
      dockerfile: server/Ticker/Dockerfile
    networks:
      - default
    depends_on:
      server:
        condition: service_started
    env_file:
      - service-mappings.env
    environment:
      ASPNETCORE_HTTP_PORTS: 80
      ASPNETCORE_HTTPS_PORTS: 
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT:-Staging}
      WEBSITE_INSTANCE_ID: "11"
      HOME: "/home/app"

  portal:
    container_name: ${COMPOSE_PROJECT_NAME}-portal
    image: cschulzsuper/mm-portal:dev
    build: 
      context: ../src
      dockerfile: frontend/Portal/Dockerfile
    networks:
      - default
    depends_on:
      server:
        condition: service_started
    env_file:
      - service-mappings.env
    environment:
      ASPNETCORE_HTTP_PORTS: 80
      ASPNETCORE_HTTPS_PORTS: 
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT:-Staging}
      WEBSITE_INSTANCE_ID: "11"
      HOME: "/home/app"

  swagger:
    container_name: ${COMPOSE_PROJECT_NAME}-swagger
    image: cschulzsuper/mm-swagger:dev
    build: 
      context: ../src
      dockerfile: frontend/Swagger/Dockerfile
    networks:
      - default
    depends_on:
      portal:
        condition: service_started
      server:
        condition: service_started
      ticker:
        condition: service_started
    env_file:
      - service-mappings.env
    environment:
      ASPNETCORE_HTTP_PORTS: 80
      ASPNETCORE_HTTPS_PORTS: 
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT:-Staging}
      WEBSITE_INSTANCE_ID: "11"
      HOME: "/home/app"

  dev-log:
    container_name: ${COMPOSE_PROJECT_NAME}-dev-log
    image: cschulzsuper/mm-dev-log:dev
    build: 
      context: ../src
      dockerfile: frontend/DevLog/Dockerfile
    networks:
      - default
    depends_on:
      portal:
        condition: service_started
    env_file:
       - service-mappings.env
    environment:
      ASPNETCORE_HTTP_PORTS: 80
      ASPNETCORE_HTTPS_PORTS: 
      ASPNETCORE_ENVIRONMENT: ${ENVIRONMENT:-Staging}
      WEBSITE_INSTANCE_ID: "11"
      HOME: "/home/app"
      