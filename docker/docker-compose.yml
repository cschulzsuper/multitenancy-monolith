version: '3.8'

networks:
  default:

services:
  nginx:    
    container_name: ${COMPOSE_PROJECT_NAME}-nginx
    image: nginx:latest
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ~/.aspnet/https:/etc/nginx/cert
    ports:
      - 80:80
      - 443:443
    depends_on:
      - server
      - ticker
      - portal
      - swagger
      - dev-log
    networks:
      - default

  server:
    container_name: ${COMPOSE_PROJECT_NAME}-server
    build: 
      context: ../src
      dockerfile: server/Server/Dockerfile
    networks:
      - default
    env_file:
      - certificates.env
      - service-urls.env
      - service-mappings.env
    volumes:
      - ~/.aspnet/https:/home/app/.aspnet/https
      - ~/.aspnet/DataProtection-Keys:/home/app/.aspnet/DataProtection-Keys
    environment:
      ASPNETCORE_HTTP_PORTS: 
      ASPNETCORE_HTTPS_PORTS: 443
      ASPNETCORE_ENVIRONMENT: Staging

  ticker:
    container_name: ${COMPOSE_PROJECT_NAME}-ticker
    build: 
      context: ../src
      dockerfile: server/Ticker/Dockerfile
    networks:
      - default
    depends_on:
      server:
        condition: service_started
    env_file:
      - certificates.env
      - service-urls.env
      - service-mappings.env
    volumes:
      - ~/.aspnet/https:/home/app/.aspnet/https
      - ~/.aspnet/DataProtection-Keys:/home/app/.aspnet/DataProtection-Keys
    environment:
      ASPNETCORE_HTTP_PORTS: 
      ASPNETCORE_HTTPS_PORTS: 443
      ASPNETCORE_ENVIRONMENT: Staging

  portal:
    container_name: ${COMPOSE_PROJECT_NAME}-portal
    build: 
      context: ../src
      dockerfile: frontend/Portal/Dockerfile
    networks:
      - default
    depends_on:
      server:
        condition: service_started
    env_file:
      - certificates.env
      - service-urls.env
      - service-mappings.env
    volumes:
      - ~/.aspnet/https:/home/app/.aspnet/https/
      - ~/.aspnet/DataProtection-Keys:/home/app/.aspnet/DataProtection-Keys
    environment:
      ASPNETCORE_HTTP_PORTS: 
      ASPNETCORE_HTTPS_PORTS: 443
      ASPNETCORE_ENVIRONMENT: Staging

  swagger:
    container_name: ${COMPOSE_PROJECT_NAME}-swagger
    build: 
      context: ../src
      dockerfile: frontend/Swagger/Dockerfile
    networks:
      - default
    depends_on:
      portal:
        condition: service_started
      server:
        condition: service_started
      ticker:
        condition: service_started
    env_file:
      - certificates.env
      - service-urls.env
      - service-mappings.env
    volumes:
      - ~/.aspnet/https:/home/app/.aspnet/https/
      - ~/.aspnet/DataProtection-Keys:/home/app/.aspnet/DataProtection-Keys
    environment:
      ASPNETCORE_HTTP_PORTS: 
      ASPNETCORE_HTTPS_PORTS: 443
      ASPNETCORE_ENVIRONMENT: Staging

  dev-log:
    container_name: ${COMPOSE_PROJECT_NAME}-dev-log
    build: 
      context: ../src
      dockerfile: frontend/DevLog/Dockerfile
    networks:
      - default
    depends_on:
      portal:
        condition: service_started
    env_file:
      - certificates.env
      - service-urls.env
      - service-mappings.env
    volumes:
      - ~/.aspnet/https:/home/app/.aspnet/https/
      - ~/.aspnet/DataProtection-Keys:/home/app/.aspnet/DataProtection-Keys
    environment:
      ASPNETCORE_HTTP_PORTS: 
      ASPNETCORE_HTTPS_PORTS: 443
      ASPNETCORE_ENVIRONMENT: Staging
      